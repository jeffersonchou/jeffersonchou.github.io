{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Thanks Credit for Zhongshanshan Share her site setting.","title":"\u9996\u9875"},{"location":"index.html#thanks","text":"Credit for Zhongshanshan Share her site setting.","title":"Thanks"},{"location":"works.html","text":"\u65e5\u671f \u540d\u79f0 \u5907\u6ce8 20220622 github page\u9875\u9762\u642d\u5efa \u8017\u65f62\u5c0f\u65f6","title":"\u5de5\u4f5c\u8bb0\u5f55"},{"location":"4.Tools/20220622-n2n%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E9%85%8D%E7%BD%AE.html","text":"n2n\u5b89\u88c5\u914d\u7f6e brew install --cask tuntap\u62a5\u9519 homebrew\u5b98\u65b9\u4ed3\u5e93\u56e0\u4e3a\u6d4b\u8bd5\u4e0d\u901a\u8fc7\u7684\u539f\u56e0\u628atuntap\u4ececask\u4ed3\u5e93\u4e2d \u5220\u9664 \u4e86\uff1b \u56e0\u4e3a\u4e00\u76f4\u6ca1\u6709\u5728MacOS\u4e0a\u9762\u8ddf\u8fdb\u6d4b\u8bd5\uff0c\u6240\u4ee5\u6ca1\u6709\u6ce8\u610f\u8fd9\u4e2a\u95ee\u9898\uff1b \u8fd1\u671f\u4f1a\u81ea\u5efa\u4e00\u4e2a\u4ed3\u5e93\u6765\u4fee\u590d\uff0c\u4e0d\u4f9d\u8d56homebrew cask\u7684\u5b98\u65b9\u4ed3\u5e93\u4e86\uff0c\u5b83\u4eec\u53d8\u52a8\u592a\u9891\u7e41\u4e86\uff1b \u7b80\u5355\u5904\u7406\u4e86\u4e00\u4e0b\uff0c\u73b0\u5728\u53ef\u4ee5\u5b89\u88c5\u4e86\uff0c\u8bf7\u53c2\u8003\u6700\u65b0\u7684 \u5b89\u88c5\u6b65\u9aa4\u6587\u6863 : \u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5c31\u53ef\u4ee5\u76f4\u63a5\u5b89\u88c5tuntap\u7f51\u7edc\u9a71\u52a8\u4e86\uff1a brew tap happynclient/taps brew install tuntap --cask \u539f\u7406\u5c31\u662f\u8df3\u8fc7homebrew\u7684\u5b98\u65b9\u4ed3\u5e93\uff0c\u73b0\u5728\u6211\u4eec\u81ea\u5df1\u7ef4\u62a4\u4e86\u4e00\u4e2atuntap\u7684\u5b89\u88c5\u811a\u672c\uff1b \u542f\u52a8\u540e\u8fd8\u6709\u7b7e\u540d\u7684\u95ee\u9898\uff0c\u5141\u8bb8\u540e\u7ee7\u7eed\u5b89\u88c5 mac\u5b89\u88c5n2n \u5b89\u88c5brew ruby -e \u201c$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\u201d \u5b89\u88c5tun cmake ssl\u7b49\u652f\u6301 brew tap homebrew/cask brew install tuntap brew install openssl brew install cmake ps: \u5982\u679c\u662flinux \u9700\u8981\u5b89\u88c5 ```openssl sudo apt-get install libssl-dev 3.clone\u6216\u8005unzip n2n\u538b\u7f29\u5305 git clone https://github.com/ntop/n2n 4. \u5f00\u59cb\u7f16\u8bd1 mkdir build cd build cmake -DOPENSSL_ROOT_DIR=_usr_local_opt_openssl ../ make 5.optionally install sudo make install ## \u670d\u52a1\u5668\u914d\u7f6e \u4f5c\u4e3a\u670d\u52a1\u5668\u7aef\uff0c\u542f\u52a8supernode $ supernode -l 3307 -v * -l\u8868\u793aUDP\u76d1\u542c\u7aef\u53e3 * -v\u8868\u793a\u8be6\u7ec6\u8f93\u51fa A\u548cC\u4f5c\u4e3a\u5ba2\u6237\u7aef\uff0c\u542f\u52a8edge ## \u5ba2\u6237\u7aef sudo edge -d n2n0 -c mynetwork -k encryptme -a 172.16.0.200 -l a.b.c.d:3307 -M 1200 -m ae:e0:4f:e7:47:5c ``` C\u64cd\u4f5c $ sudo edge -d n2n0 -c mynetwork -k encryptme -a 172.16.0.201 -l a.b.c.d:3307 -M 1200 -m ae:e0:4f:e7:47:5b * -d\u8868\u793a\u65b0\u5efa\u865a\u62df\u7f51\u5361\u540d * -c\u8868\u793an2n\u793e\u533a\u540d * -k\u8868\u793a\u52a0\u5bc6\u952e\u503c * -a\u8868\u793a\u81ea\u5b9a\u4e49ip * -l\u8868\u793a\u670d\u52a1\u5668ip: \u76d1\u542c\u7aef\u53e3 * -M\u8868\u793a\u865a\u62df\u7f51\u5361\u6700\u5927\u4f20\u8f93\u5355\u4f4d * -m\u8868\u793a\u865a\u62df\u7f51\u5361MAC\u5730\u5740","title":"n2n\u5185\u7f51\u7a7f\u900f\u914d\u7f6e"},{"location":"4.Tools/20220622-n2n%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E9%85%8D%E7%BD%AE.html#n2n","text":"","title":"n2n\u5b89\u88c5\u914d\u7f6e"},{"location":"4.Tools/20220622-n2n%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E9%85%8D%E7%BD%AE.html#brew-install-cask-tuntap","text":"homebrew\u5b98\u65b9\u4ed3\u5e93\u56e0\u4e3a\u6d4b\u8bd5\u4e0d\u901a\u8fc7\u7684\u539f\u56e0\u628atuntap\u4ececask\u4ed3\u5e93\u4e2d \u5220\u9664 \u4e86\uff1b \u56e0\u4e3a\u4e00\u76f4\u6ca1\u6709\u5728MacOS\u4e0a\u9762\u8ddf\u8fdb\u6d4b\u8bd5\uff0c\u6240\u4ee5\u6ca1\u6709\u6ce8\u610f\u8fd9\u4e2a\u95ee\u9898\uff1b \u8fd1\u671f\u4f1a\u81ea\u5efa\u4e00\u4e2a\u4ed3\u5e93\u6765\u4fee\u590d\uff0c\u4e0d\u4f9d\u8d56homebrew cask\u7684\u5b98\u65b9\u4ed3\u5e93\u4e86\uff0c\u5b83\u4eec\u53d8\u52a8\u592a\u9891\u7e41\u4e86\uff1b \u7b80\u5355\u5904\u7406\u4e86\u4e00\u4e0b\uff0c\u73b0\u5728\u53ef\u4ee5\u5b89\u88c5\u4e86\uff0c\u8bf7\u53c2\u8003\u6700\u65b0\u7684 \u5b89\u88c5\u6b65\u9aa4\u6587\u6863 : \u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5c31\u53ef\u4ee5\u76f4\u63a5\u5b89\u88c5tuntap\u7f51\u7edc\u9a71\u52a8\u4e86\uff1a brew tap happynclient/taps brew install tuntap --cask \u539f\u7406\u5c31\u662f\u8df3\u8fc7homebrew\u7684\u5b98\u65b9\u4ed3\u5e93\uff0c\u73b0\u5728\u6211\u4eec\u81ea\u5df1\u7ef4\u62a4\u4e86\u4e00\u4e2atuntap\u7684\u5b89\u88c5\u811a\u672c\uff1b \u542f\u52a8\u540e\u8fd8\u6709\u7b7e\u540d\u7684\u95ee\u9898\uff0c\u5141\u8bb8\u540e\u7ee7\u7eed\u5b89\u88c5","title":"brew install --cask tuntap\u62a5\u9519"},{"location":"4.Tools/20220622-n2n%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E9%85%8D%E7%BD%AE.html#macn2n","text":"\u5b89\u88c5brew ruby -e \u201c$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\u201d \u5b89\u88c5tun cmake ssl\u7b49\u652f\u6301 brew tap homebrew/cask brew install tuntap brew install openssl brew install cmake ps: \u5982\u679c\u662flinux \u9700\u8981\u5b89\u88c5 ```openssl sudo apt-get install libssl-dev 3.clone\u6216\u8005unzip n2n\u538b\u7f29\u5305 git clone https://github.com/ntop/n2n 4. \u5f00\u59cb\u7f16\u8bd1 mkdir build cd build cmake -DOPENSSL_ROOT_DIR=_usr_local_opt_openssl ../ make 5.optionally install sudo make install ## \u670d\u52a1\u5668\u914d\u7f6e \u4f5c\u4e3a\u670d\u52a1\u5668\u7aef\uff0c\u542f\u52a8supernode $ supernode -l 3307 -v * -l\u8868\u793aUDP\u76d1\u542c\u7aef\u53e3 * -v\u8868\u793a\u8be6\u7ec6\u8f93\u51fa A\u548cC\u4f5c\u4e3a\u5ba2\u6237\u7aef\uff0c\u542f\u52a8edge ## \u5ba2\u6237\u7aef sudo edge -d n2n0 -c mynetwork -k encryptme -a 172.16.0.200 -l a.b.c.d:3307 -M 1200 -m ae:e0:4f:e7:47:5c ``` C\u64cd\u4f5c $ sudo edge -d n2n0 -c mynetwork -k encryptme -a 172.16.0.201 -l a.b.c.d:3307 -M 1200 -m ae:e0:4f:e7:47:5b * -d\u8868\u793a\u65b0\u5efa\u865a\u62df\u7f51\u5361\u540d * -c\u8868\u793an2n\u793e\u533a\u540d * -k\u8868\u793a\u52a0\u5bc6\u952e\u503c * -a\u8868\u793a\u81ea\u5b9a\u4e49ip * -l\u8868\u793a\u670d\u52a1\u5668ip: \u76d1\u542c\u7aef\u53e3 * -M\u8868\u793a\u865a\u62df\u7f51\u5361\u6700\u5927\u4f20\u8f93\u5355\u4f4d * -m\u8868\u793a\u865a\u62df\u7f51\u5361MAC\u5730\u5740","title":"mac\u5b89\u88c5n2n"},{"location":"4.Tools/20220622-%E4%BD%BF%E7%94%A8mkdoc%E6%90%AD%E5%BB%BAgithub%20page.html","text":"20220622-\u4f7f\u7528mkdoc\u642d\u5efagithub page \u672c\u5730\u7f16\u8bd1\u73af\u5883 \u5b89\u88c5 python \u4f9d\u8d56\u5305 mkdocs==1.3.0 mkdocs-material==8.3.6 mkdocs-material-extensions==1.0.3 mike==1.1.2 \u521d\u59cb\u5316\u672c\u5730\u9879\u76ee blog mkdocs new blog \u751f\u6210\u5e76\u5173\u8054github page \u65b0\u5efagitHub page\u9879\u76ee \u521b\u5efa\u4e00\u4e2a\u540d\u4e3a\u4e3ausername.github.io\u7684\u4ee3\u7801\u4ed3\u5e93\uff0c\u5176\u4e2dusername\u4e3aGitHub\u7684\u8d26\u6237\u540d\u79f0\u3002 \u6ce8\uff1a\u5982\u679cusername\u4e0e\u8d26\u6237\u540d\u79f0\u4e0d\u5339\u914d\uff0c\u5c06\u4e0d\u4f1a\u8d77\u4f5c\u7528 \u4fee\u6539README.md README.md\u9700\u8981\u4fee\u6539\uff0c\u6307\u5411\"https://jeffersonchou.github.io/\"\u57df\u540d\u3002 \u51c6\u5907github page\u9879\u76ee Clone github Page\u9879\u76ee\uff0c\u5c06mkdocs\u521d\u59cb\u5316\u7684\u6587\u4ef6\uff0c\u79fb\u5165\u79fb\u5165\u9879\u76ee\u672c\u5730\u6587\u4ef6\u5939\uff0c\u5e76 push \u5230\u8fdc\u7a0b\u4ed3\u5e93main\u5206\u652f\u3002 \u65b0\u5efa gh-pages \u5206\u652f\uff0c\u5e76\u8bbe\u7f6egithub page\u7684source\u9875\u9762 git checkout -b gb-pages \u5982\u56fe\uff0c\u8bbe\u7f6esource\u9875\u9762\uff1a \u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e0b\u7f16\u8bd1\u751f\u6210\u9875\u9762\uff0c\u5e76\u5c06\u9875\u9762\u63d0\u4ea4\u5230 gh-pages \u5206\u652f mkdocs build \u5220\u9664\u9664site\u4e4b\u5916\u7684\u6587\u4ef6\u5e76\u5c06site\u6587\u4ef6\u5939\u7684\u6587\u4ef6\u66f4\u65b0\u5230root\u4e2d\uff0c\u5c06\u9879\u76ee\u6587\u4ef6\u5939\u66f4\u65b0\u5230 gh-pages \u5206\u652f\uff0c\u6b64\u65f6\u67e5\u770bgithub page\u7f51\u9875\u5730\u5740\u5373\u53ef\u770b\u5230\u751f\u6210\u7684\u9875\u9762\uff1b \u5229\u7528 GitHub Action \u5b8c\u6210\u81ea\u52a8\u5316 mkdocs \u7f16\u8bd1 \u70b9\u51fb GitHub myblog \u7684 Action\uff0c\u65b0\u5efa\u4e00\u4e2a simple workflow \u4fee\u6539 yaml \u6587\u4ef6 # This is a basic workflow to help you get started with Actions name: public site # Controls when the workflow will run on: # Triggers the workflow on push or pull request events but only for the main branch push: branches: [ main ] pull_request: branches: [ main ] # Allows you to run this workflow manually from the Actions tab workflow_dispatch: # A workflow run is made up of one or more jobs that can run sequentially or in parallel jobs: # This workflow contains a single job called \"build\" build: # The type of runner that the job will run on runs-on: ubuntu-latest # Steps represent a sequence of tasks that will be executed as part of the job steps: # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it - uses: actions/checkout@v3 - name: Install mkdocs run: | python -m pip install mkdocs==1.3.0 python -m pip install mkdocs-material==8.3.6 python -m pip install mkdocs-material-extensions==1.0.3 python -m pip install mike==1.1.2 - name: Create html run: mkdocs build - name: Public uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./site","title":"\u4f7f\u7528mkdoc\u642d\u5efagithub page"},{"location":"4.Tools/20220622-%E4%BD%BF%E7%94%A8mkdoc%E6%90%AD%E5%BB%BAgithub%20page.html#20220622-mkdocgithub-page","text":"","title":"20220622-\u4f7f\u7528mkdoc\u642d\u5efagithub page"},{"location":"4.Tools/20220622-%E4%BD%BF%E7%94%A8mkdoc%E6%90%AD%E5%BB%BAgithub%20page.html#_1","text":"\u5b89\u88c5 python \u4f9d\u8d56\u5305 mkdocs==1.3.0 mkdocs-material==8.3.6 mkdocs-material-extensions==1.0.3 mike==1.1.2 \u521d\u59cb\u5316\u672c\u5730\u9879\u76ee blog mkdocs new blog","title":"\u672c\u5730\u7f16\u8bd1\u73af\u5883"},{"location":"4.Tools/20220622-%E4%BD%BF%E7%94%A8mkdoc%E6%90%AD%E5%BB%BAgithub%20page.html#github-page","text":"\u65b0\u5efagitHub page\u9879\u76ee \u521b\u5efa\u4e00\u4e2a\u540d\u4e3a\u4e3ausername.github.io\u7684\u4ee3\u7801\u4ed3\u5e93\uff0c\u5176\u4e2dusername\u4e3aGitHub\u7684\u8d26\u6237\u540d\u79f0\u3002 \u6ce8\uff1a\u5982\u679cusername\u4e0e\u8d26\u6237\u540d\u79f0\u4e0d\u5339\u914d\uff0c\u5c06\u4e0d\u4f1a\u8d77\u4f5c\u7528 \u4fee\u6539README.md README.md\u9700\u8981\u4fee\u6539\uff0c\u6307\u5411\"https://jeffersonchou.github.io/\"\u57df\u540d\u3002 \u51c6\u5907github page\u9879\u76ee Clone github Page\u9879\u76ee\uff0c\u5c06mkdocs\u521d\u59cb\u5316\u7684\u6587\u4ef6\uff0c\u79fb\u5165\u79fb\u5165\u9879\u76ee\u672c\u5730\u6587\u4ef6\u5939\uff0c\u5e76 push \u5230\u8fdc\u7a0b\u4ed3\u5e93main\u5206\u652f\u3002 \u65b0\u5efa gh-pages \u5206\u652f\uff0c\u5e76\u8bbe\u7f6egithub page\u7684source\u9875\u9762 git checkout -b gb-pages \u5982\u56fe\uff0c\u8bbe\u7f6esource\u9875\u9762\uff1a \u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e0b\u7f16\u8bd1\u751f\u6210\u9875\u9762\uff0c\u5e76\u5c06\u9875\u9762\u63d0\u4ea4\u5230 gh-pages \u5206\u652f mkdocs build \u5220\u9664\u9664site\u4e4b\u5916\u7684\u6587\u4ef6\u5e76\u5c06site\u6587\u4ef6\u5939\u7684\u6587\u4ef6\u66f4\u65b0\u5230root\u4e2d\uff0c\u5c06\u9879\u76ee\u6587\u4ef6\u5939\u66f4\u65b0\u5230 gh-pages \u5206\u652f\uff0c\u6b64\u65f6\u67e5\u770bgithub page\u7f51\u9875\u5730\u5740\u5373\u53ef\u770b\u5230\u751f\u6210\u7684\u9875\u9762\uff1b","title":"\u751f\u6210\u5e76\u5173\u8054github page"},{"location":"4.Tools/20220622-%E4%BD%BF%E7%94%A8mkdoc%E6%90%AD%E5%BB%BAgithub%20page.html#github-action-mkdocs","text":"\u70b9\u51fb GitHub myblog \u7684 Action\uff0c\u65b0\u5efa\u4e00\u4e2a simple workflow \u4fee\u6539 yaml \u6587\u4ef6 # This is a basic workflow to help you get started with Actions name: public site # Controls when the workflow will run on: # Triggers the workflow on push or pull request events but only for the main branch push: branches: [ main ] pull_request: branches: [ main ] # Allows you to run this workflow manually from the Actions tab workflow_dispatch: # A workflow run is made up of one or more jobs that can run sequentially or in parallel jobs: # This workflow contains a single job called \"build\" build: # The type of runner that the job will run on runs-on: ubuntu-latest # Steps represent a sequence of tasks that will be executed as part of the job steps: # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it - uses: actions/checkout@v3 - name: Install mkdocs run: | python -m pip install mkdocs==1.3.0 python -m pip install mkdocs-material==8.3.6 python -m pip install mkdocs-material-extensions==1.0.3 python -m pip install mike==1.1.2 - name: Create html run: mkdocs build - name: Public uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./site","title":"\u5229\u7528 GitHub Action \u5b8c\u6210\u81ea\u52a8\u5316 mkdocs \u7f16\u8bd1"}]}